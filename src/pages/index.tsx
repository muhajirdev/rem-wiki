import e from "cors";
import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Rem Wiki</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <Auth />
      </main>
    </>
  );
};

export default Home;

const LoggedOut = () => {
  return (
    <div className="flex flex-col justify-center text-lg">
      <h1>Welcome To Rem wiki</h1>

      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold no-underline transition hover:bg-white/20"
        onClick={() => signIn()}
      >
        Sign in
      </button>
    </div>
  );
};

const UsernameForm = () => {
  const [username, setUsername] = useState("");
  const mutation = trpc.auth.updateUsername.useMutation();
  const onSubmit = (e) => {
    e.preventDefault();
    mutation.mutate(
      { username },
      { onSuccess: () => window.location.reload() }
    );
  };
  return (
    <div className="flex flex-col">
      <div className="mb-4 text-xl">
        Welcome to Rem Wiki. What username you want to use?
      </div>
      <form onSubmit={onSubmit} className="flex space-x-4">
        <input
          type="text"
          value={username}
          placeholder="Your username"
          className="flex-1 rounded-lg border px-4 py-2"
          onChange={(e) => setUsername(e.target.value)}
        />
        <button
          type="submit"
          className="rounded-lg bg-black px-4 py-2 text-white"
        >
          Submit
        </button>
      </form>
    </div>
  );
};

const DigitalGardenInformation = () => {
  const { data: usernameAndApiKey } = trpc.auth.getUsernameAndApiKey.useQuery();
  const url = `https://rem.wiki/${usernameAndApiKey?.username}`;
  const apiKey = usernameAndApiKey?.apiKey;
  return (
    <div className="space-y-4">
      <div>
        Your api key:{" "}
        <code className="rounded-lg bg-slate-200 p-2">{apiKey}</code>
      </div>
      <div className="flex justify-center">
        <a
          className="flex rounded-lg bg-black px-4 py-2 font-semibold text-white"
          href={url}
        >
          Go to my garden
        </a>
      </div>
    </div>
  );
};

const LoggedIn = () => {
  const { data: usernameAndApiKey, isLoading } =
    trpc.auth.getUsernameAndApiKey.useQuery();
  const username = usernameAndApiKey?.username;

  return (
    <div className="flex flex-col items-center px-8">
      {!username && !isLoading ? (
        <UsernameForm />
      ) : (
        <DigitalGardenInformation />
      )}

      <button
        className="mt-16 rounded-full bg-white/10 px-10 py-3 font-semibold no-underline transition hover:bg-white/20"
        onClick={() => signOut()}
      >
        Sign out
      </button>
    </div>
  );
};

const Auth: React.FC = () => {
  const { data: sessionData } = useSession();

  if (!sessionData) return <LoggedOut />;
  return <LoggedIn />;
};
